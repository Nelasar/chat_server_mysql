1) Вступление
	Сёмин Андрей Юрьевич
	Выполнял задание один из-за обстоятельств

	Проект сделан за 6 часов за день до дедлайна и претендует только на минимальный зачёт.
	
2) Описание программы
	Основными сущностями для чата как такого являются следующие:
		- Пользователь;
		- Сообщение;
		- Собственно чат;

	Классы на основе этих сущностей и будут фундаментом всего "приложения".
	Классы  User (пользователь) и Message(сообщение) являются простейшими в этой реализации.
	Для них опредлены основные простые поля и методы без излишеств:
	 I. User:
			поля:
				-логин (string)
				-юзернейм (string)
				-пароль (string)
			методы:
				геттеры для каждого поля
	 II. Message:
			поля:
				-автор сообщения (string)
				-текст сообщения (string)
				
	Этого достаточно для реализации поставленной задачи.

	Прежде чем начать переписки, пользователю необходимо войти в чат под своим "аккаунтом",
	предварительно зарегистрировавшись. 

	Регистрация и вход реализованы отдельными функциями:

	I. Регистрация

		Функции для регистрации описаны в файле routine.cpp:

		bool is_already_registered(string login, string name) - вспомогательная функция, проверяющая, зарегистрирован ли пользователь уже
		bool registration - непосредственная регистрация пользователя:
			пользователь последовательно вводит желаемые данные, после чего проводится проверка на регистрацию (может такой логин или имя уже заняты),
			валидация пароля, после чего динамически создаётся новый пользователь и сохраняется в массиве зарегистрированных пользователей.
			Для этого пользователя создаётся отдельная папка в директории C:\ChatUsers\<имя пользователя>, в котором будут храниться его персональные чаты.
		
		Сами зарегистрированные пользователи хранятся в текстовом файле "users.txt", по нему и проверяется состояние регистирации и доступные для личной переписки пользователи.
		
	II. Вход 
		int find_user_by_login(string) - поиск пользователя в массиве по логину, вспом.функция
		bool validate_password(string, int) - верификация соответствия логин/пароль, вспом.функция
		bool log_in() - непосредственный процесс входа, основная функция
		
	III. Другие функции, не являющиемя методами класса
		bool main_menu() - печатает главное меню и управляет доступом к действиям, по сути является окном авторизованного пользователя:
			1) Глобальный чат - написать в глобальный чат, функция global_chatting();
			2) Личный чат - написать в личный чат, функция personal_chatting(User);
			3) Разлогиниться
			4) Выйти из приложения 
		void main_menu() - главный цикл программы, осущесвтляет переход между окном регистрации/входа и окном авторизированного пользователя
		
		global_chatting - небольшая обёртка для реализации доступа к глобальному чату
		personal_chatting(User) - небольшая обёртка для реализации доступа к персональному чату
		
	Важной частью является шаблон Array. Шаблон представляет собой самописный вектор, использующийся для хранения массива пользователей и сообщений.
	Массив пользователей используется для хранения всех зарегистрированных пользователей и записи/чтения из файла.
	Вектор сообщений необходим для реализации чата.
	
	Класс Chat - реализация чата. Представляет собой по сути вектор сообщений. При переписке каждое новое сообщение сохраняется в файл и весь список выводится на экран. 
	Персональные чаты хранятся для каждого пользователя в папках с названиями по своему логину. 
	
	
	IV. Chat:
		Array<Message> chat - список сообщений, чат как таковой.
		string name - название чата, является полным путём файла, в который сохранится чат
		
		Методы: 
			load_chat() - загрузка из файла
			Load_chat(string) - загрузка и файла с по названию
			save_chat() - сохранить в файл
			save_chat() - сохранить в файл по названию
			
			save_last_msg(Message) - сохранить последнее сообщения в чат (файл)
			
			messaging(User, string)- основаня фунция переписки, в ней выполняется ввод новых сообщений, вывод чата, сохранение чатов в соответствующие директории.
			
По сути и всё. Валидация ввода предусмотрена не везде, инпут чарами ломает всё и вся и отказывается чиниться, не понимаю как с этим бороться.
Эксепшены написаны, но используется только bad_index для индекса массива.

Можно было сделать больше, но что есть то есть. 